import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

# --- 1. ПОВТОРЕННЯ РОЗРАХУНКУ ПАРАМЕТРІВ ---
# Дані моделюють зв'язок між поведінкою (X) та залученістю (Y)
# X: Незалежна змінна "Кількість переглянутих товарів" (поведінковий показник)
X = np.array([5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5])
# Y: Залежна змінна "Середній час сесії (хв)" (показник залученості)
Y = np.array([6.2, 6.5, 6.9, 7.3, 7.8, 8.5, 9.1, 9.8, 10.6, 11.5])

# Нелінійна модель: Експоненційна Y = a * exp(b * X)
def exponential_model(X, a, b):
    """Модель залежності часу сесії від переглянутих товарів."""
    return a * np.exp(b * X)

try:
    # Оцінка параметрів (виконується, як у Завданні 3)
    popt, _ = curve_fit(exponential_model, X, Y, p0=[6.0, 0.05])
    a_hat, b_hat = popt
    Y_hat = exponential_model(X, a_hat, b_hat)
except RuntimeError:
    print("Помилка: Неможливо отримати параметри. Перевірте вхідні дані.")
    exit()

# --- 2. ВИЗНАЧЕННЯ ТА АНАЛІЗ ФУНКЦІЇ РЕГРЕСІЇ (ЗАВДАННЯ 4) ---

print("=" * 70)
print(" АНАЛІЗ РЕГРЕСІЙНОЇ МОДЕЛІ ДЛЯ СИСТЕМИ РЕКОМЕНДАЦІЙ")
print("=" * 70)

# 2.1. Математичне рівняння
print("\n--- ФУНКЦІЯ РЕГРЕСІЇ (МАТЕМАТИЧНЕ РІВНЯННЯ) ---")
regression_equation = f"Час сесії (Y) = {a_hat:.4f} * exp({b_hat:.4f} * Кількість переглядів (X))"
print(f"Отримане рівняння моделі: {regression_equation}")

# 2.2. Встановлення впливу змінних на залежну величину
print("\n--- ВПЛИВ ПОВЕДІНКОВИХ ЗМІННИХ (ІНТЕРПРЕТАЦІЯ) ---")

# Інтерпретація параметра 'b'
if b_hat > 0:
    print(f"1. Характер зв'язку: **Прямий і нелінійний** (b = {b_hat:.4f} > 0).")
    print("   Рекомендаційний висновок: Збільшення кількості переглянутих товарів **сприяє** зростанню залученості (часу сесії).")
    print(f"2. Граничний вплив: Зростання кількості переглянутих товарів на 1 одиницю призводить до відносного зростання середнього часу сесії приблизно на **{b_hat * 100:.2f}%**.")
elif b_hat < 0:
    print(f"1. Характер зв'язку: **Обернений і нелінійний** (b = {b_hat:.4f} < 0).")
    print("   Рекомендаційний висновок: Надмірна кількість переглянутих товарів може **знижувати** залученість (викликати втому/розгубленість).")
else:
     print("1. Характер зв'язку: Зв'язок майже відсутній.")
     
# Інтерпретація параметра 'a'
print(f"3. Параметр a = {a_hat:.4f}: Теоретичний середній час сесії (хв), якщо користувач переглянув 0 товарів.")

# 2.3. Приклад прогнозної сили моделі
example_X = 10.0 # Прогнозуємо час сесії, якщо користувач перегляне 10 товарів
prediction_Y = exponential_model(example_X, a_hat, b_hat)
print(f"\n--- ПРОГНОЗНА ОЦІНКА МОДЕЛІ ---")
print(f"Прогноз: Якщо користувач перегляне {example_X} товарів, його середній час сесії складе **{prediction_Y:.2f} хв**.")

# --- 3. ОЦІНКА ПОБУДОВАНОЇ РЕГРЕСІЙНОЇ МОДЕЛІ (ВІЗУАЛІЗАЦІЯ) ---
# Візуалізація дозволяє оцінити, наскільки добре крива моделі відповідає реальній поведінці
plt.figure(figsize=(10, 6))
plt.scatter(X, Y, label='Фактичні дані (Середній час сесії)', color='red', marker='o')
plt.plot(X, Y_hat, label=f'Модель залученості: {regression_equation}', color='blue', linewidth=2)
plt.title('Аналіз залученості користувачів (Рекомендаційна система)')
plt.xlabel('Кількість переглянутих товарів (X)')
plt.ylabel('Середній час сесії (Y, хв)')
plt.grid(True, linestyle='--', alpha=0.6)
plt.legend()
plt.show()