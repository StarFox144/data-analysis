# timeseries_analysis.py
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from statsmodels.tsa.seasonal import seasonal_decompose
from statsmodels.graphics.tsaplots import plot_acf
from statsmodels.stats.diagnostic import acorr_ljungbox 

# ============================================================
# 1. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
# ============================================================
csv_filename = 'user_behavior_data.csv'
try:
    df = pd.read_csv(csv_filename, index_col='–î–∞—Ç–∞', parse_dates=True)
    ts = df['–ü–æ–∫–∞–∑–Ω–∏–∫_–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ']
    print("="*70)
    print(f"‚úÖ 1-2. –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ —Ñ–∞–π–ª—É: {csv_filename}")
    print("="*70)
except FileNotFoundError:
    print(f"–ü–û–ú–ò–õ–ö–ê: –§–∞–π–ª '{csv_filename}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø–æ—á–∞—Ç–∫—É –∑–∞–ø—É—Å—Ç—ñ—Ç—å generate_timeseries_data.py")
    exit()

# ============================================================
# 3. –ó–æ–±—Ä–∞–∑–∏—Ç–∏ –¥–∞–Ω—ñ –≥—Ä–∞—Ñ—ñ—á–Ω–æ (–í–∏—Å–Ω–æ–≤–æ–∫ –ø—Ä–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç—Ä–µ–Ω–¥—É)
# ============================================================

plt.figure(figsize=(12, 5))
ts.plot(label='–ß–∞—Å–æ–≤–∏–π —Ä—è–¥')
# –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–≤–∑–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ –¥–ª—è –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç—Ä–µ–Ω–¥—É
ts.rolling(window=12).mean().plot(color='red', linestyle='-', label='–ö–æ–≤–∑–Ω–µ —Å–µ—Ä–µ–¥–Ω—î (–¢—Ä–µ–Ω–¥)')
plt.title('3. –ß–∞—Å–æ–≤–∏–π —Ä—è–¥ —Ç–∞ –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è –¢—Ä–µ–Ω–¥—É')
plt.xlabel('–î–∞—Ç–∞')
plt.ylabel('–ü–æ–∫–∞–∑–Ω–∏–∫ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ')
plt.legend()
plt.grid(True, linestyle='--', alpha=0.6)
plt.show()

print("\n--- –í—ñ–∑—É–∞–ª—å–Ω–∏–π –≤–∏—Å–Ω–æ–≤–æ–∫ ---")
print("–ì—Ä–∞—Ñ—ñ–∫ –ø–æ–∫–∞–∑—É—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∑—Ä–æ—Å—Ç–∞—é—á–æ–≥–æ —Ç—Ä–µ–Ω–¥—É —Ç–∞ —Å–µ–∑–æ–Ω–Ω–∏—Ö –∫–æ–ª–∏–≤–∞–Ω—å.")

# ============================================================
# 4. –ö—Ä–∏—Ç–µ—Ä—ñ–π –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ç–µ–Ω–¥–µ–Ω—Ü—ñ—ó (–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è Ljung-Box Test)
# ============================================================
# H0: –ê–≤—Ç–æ–∫–æ—Ä–µ–ª—è—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è (—Ä—è–¥ —î –≤–∏–ø–∞–¥–∫–æ–≤–∏–º, —Ç—Ä–µ–Ω–¥ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π).
# –Ø–∫—â–æ —Ä—è–¥ –º–∞—î —Ç—Ä–µ–Ω–¥, —Ç–æ –∫–æ—Ä–µ–ª—è—Ü—ñ—è –Ω–∞ –º–∞–ª–∏—Ö –ª–∞–≥–∞—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, lag=1) –±—É–¥–µ –≤–∏—Å–æ–∫–æ—é.

# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Ljung-Box Test –¥–ª—è —Ä—è–¥—É
ljung_box_trend_test = acorr_ljungbox(ts, lags=[1], return_df=True)
p_value_trend = ljung_box_trend_test['lb_pvalue'].iloc[0]
alpha = 0.05

print("\n" + "="*70)
print("4. –ö—Ä–∏—Ç–µ—Ä—ñ–π –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ç–µ–Ω–¥–µ–Ω—Ü—ñ—ó (Ljung-Box Test –Ω–∞ –∞–≤—Ç–æ–∫–æ—Ä–µ–ª—è—Ü—ñ—é)")
print("="*70)
print(f"P-–∑–Ω–∞—á–µ–Ω–Ω—è Ljung-Box Test (Lag 1): {p_value_trend:.4f}")

if p_value_trend < alpha:
    print(f"\n–í–∏—Å–Ω–æ–≤–æ–∫: P-value < 0.05. –ù—É–ª—å–æ–≤–∞ –≥—ñ–ø–æ—Ç–µ–∑–∞ –ø—Ä–æ –≤–∏–ø–∞–¥–∫–æ–≤—ñ—Å—Ç—å –≤—ñ–¥—Ö–∏–ª—è—î—Ç—å—Å—è.")
    print("üì¢ –¢–ï–ù–î–ï–ù–¶–Ü–Ø –í –ß–ê–°–û–í–û–ú–£ –†–Ø–î–£ –ü–†–ò–°–£–¢–ù–Ø (—Ä—è–¥ –Ω–µ —î –≤–∏–ø–∞–¥–∫–æ–≤–∏–º/–Ω–µ–∑–∞–ª–µ–∂–Ω–∏–º).")
else:
    print(f"\n–í–∏—Å–Ω–æ–≤–æ–∫: P-value ‚â• 0.05. –ù—É–ª—å–æ–≤–∞ –≥—ñ–ø–æ—Ç–µ–∑–∞ –ø—Ä–æ –≤–∏–ø–∞–¥–∫–æ–≤—ñ—Å—Ç—å –Ω–µ –≤—ñ–¥—Ö–∏–ª—è—î—Ç—å—Å—è.")
    print("üì¢ –¢–ï–ù–î–ï–ù–¶–Ü–Ø –í –ß–ê–°–û–í–û–ú–£ –†–Ø–î–£ –í–Ü–î–°–£–¢–ù–Ø.")

# ============================================================
# 5. –†–æ–∑–∫–ª–∞—Å—Ç–∏ –¥–∏–Ω–∞–º—ñ—á–Ω–∏–π —Ä—è–¥ –Ω–∞ —Å–∫–ª–∞–¥–æ–≤—ñ (–î–µ–∫–æ–º–ø–æ–∑–∏—Ü—ñ—è)
# ============================================================
# –ú–æ–¥–µ–ª—å: –ê–¥–∏—Ç–∏–≤–Ω–∞ (–¥–ª—è –¥–∞–Ω–∏—Ö —ñ–∑ –ø—Ä–∏–±–ª–∏–∑–Ω–æ –ø–æ—Å—Ç—ñ–π–Ω–æ—é –∞–º–ø–ª—ñ—Ç—É–¥–æ—é —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—ñ)

decomposition = seasonal_decompose(ts, model='additive', period=12)

print("\n" + "="*70)
print("5. –î–µ–∫–æ–º–ø–æ–∑–∏—Ü—ñ—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ–≥–æ —Ä—è–¥—É")
print("="*70)

decomposition.plot()
plt.suptitle('–î–µ–∫–æ–º–ø–æ–∑–∏—Ü—ñ—è –ß–∞—Å–æ–≤–æ–≥–æ –†—è–¥—É', y=1.02)
plt.show()

print("\n--- –í–∏—Å–Ω–æ–≤–∫–∏ –ø—Ä–æ —Å–∫–ª–∞–¥–æ–≤—ñ —Ä—è–¥—É ---")
print("1. –¢—Ä–µ–Ω–¥: –ß—ñ—Ç–∫–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π, –∑—Ä–æ—Å—Ç–∞—é—á–∏–π.")
print("2. –°–µ–∑–æ–Ω–Ω—ñ—Å—Ç—å: –†–µ–≥—É–ª—è—Ä–Ω—ñ –∫–æ–ª–∏–≤–∞–Ω–Ω—è –∑ –ø–µ—Ä—ñ–æ–¥–æ–º 12 (—Ä—ñ—á–Ω–∏–π —Ü–∏–∫–ª).")
print("3. –ó–∞–ª–∏—à–æ–∫ (Residual): –í–∏–ø–∞–¥–∫–æ–≤–∞, –Ω–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.")


# ============================================================
# 6. –ü–æ–±—É–¥—É–≤–∞—Ç–∏ –∞–≤—Ç–æ–∫–æ—Ä–µ–ª—è—Ü—ñ–π–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é (ACF) –≤–∏–ø–∞–¥–∫–æ–≤–æ—ó –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
# ============================================================

residuals = decomposition.resid.dropna() 

# –ü–æ–≤—Ç–æ—Ä–Ω–∏–π Ljung-Box Test –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞–ª–∏—à–∫—ñ–≤ (—á–∏ —î –≤–æ–Ω–∏ –±—ñ–ª–∏–º —à—É–º–æ–º)
ljung_box_resid_test = acorr_ljungbox(residuals, lags=[10], return_df=True)
ljung_box_p_value = ljung_box_resid_test['lb_pvalue'].iloc[0]

print("\n" + "="*70)
print("6. –ê–≤—Ç–æ–∫–æ—Ä–µ–ª—è—Ü—ñ–π–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è (ACF) —Ç–∞ –æ—Ü—ñ–Ω–∫–∞ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ")
print("="*70)

# –ü–æ–±—É–¥–æ–≤–∞ ACF –∑–∞–ª–∏—à–∫—ñ–≤
plot_acf(residuals, lags=20, title='–ê–≤—Ç–æ–∫–æ—Ä–µ–ª—è—Ü—ñ–π–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –ó–∞–ª–∏—à–∫—ñ–≤ (Residuals)')
plt.xlabel('–õ–∞–≥')
plt.show()

print(f"P-–∑–Ω–∞—á–µ–Ω–Ω—è Ljung-Box Test (Lag 10): {ljung_box_p_value:.4f}")

if ljung_box_p_value > alpha:
    print(f"‚úÖ –ö–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å —Ä–æ–∑–∫–ª–∞–¥–µ–Ω–Ω—è: –ó–∞–ª–∏—à–∫–∏ —î '–±—ñ–ª–∏–º —à—É–º–æ–º' (–Ω–µ–º–∞—î –∑–Ω–∞—á—É—â–æ—ó –∞–≤—Ç–æ–∫–æ—Ä–µ–ª—è—Ü—ñ—ó). –†–æ–∑–∫–ª–∞–¥–µ–Ω–Ω—è –∫–æ—Ä–µ–∫—Ç–Ω–µ.")
else:
    print(f"‚ùå –ö–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å —Ä–æ–∑–∫–ª–∞–¥–µ–Ω–Ω—è: –ó–∞–ª–∏—à–∫–∏ –º—ñ—Å—Ç—è—Ç—å –∑–Ω–∞—á—É—â—É –∞–≤—Ç–æ–∫–æ—Ä–µ–ª—è—Ü—ñ—é. –†–æ–∑–∫–ª–∞–¥–µ–Ω–Ω—è –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ.")